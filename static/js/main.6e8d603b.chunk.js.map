{"version":3,"sources":["components/Content/index.js","components/Header/index.js","components/SideBar/index.js","components/Filters/index.js","components/SelectInput/index.js","components/Card/index.js","App.js","serviceWorker.js","index.js"],"names":["Content","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","cards","data","react_default","a","createElement","className","length","map","c","components_Card","Component","Header","showNavbar","onMenuClick","bind","assertThisInitialized","href","document","querySelector","classList","toggle","React","SideBar","handleChange","console","log","components_SelectInput","label","Filters","SelectInput","props","value","onChange","Card","showOverlay","card","imgEl","createRef","_this2","onMouseEnter","toogleOverlay","onMouseLeave","src","img","alt","ref","el","PureComponent","App","components_Header","components_Filters","components_SideBar","components_Content","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6e8d603b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Filters, Card } from '../';\nimport data from './static'\nimport './style.scss';\n\n\nclass Content extends Component {\n  constructor(){\n    super();\n    this.state = {\n      cards: data\n    }\n  }\n  render() {\n    return (\n      <div className=\"content\">\n        <div className=\"content__gallery\">\n          {this.state.cards.length > 0 && \n          this.state.cards.map(c => {\n            return <Card data={c}/>\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Content;\n","import React from 'react';\nimport './style.scss';\n\nclass Header extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      showNavbar: false\n    };\n    this.onMenuClick = this.onMenuClick.bind(this);\n  }\n  \n  render() {\n    return (\n    <div className=\"header\">\n      <div className=\"header__name\">\n        <h3>Jane Smith</h3>\n      </div>\n      <div className=\"header__details\">\n        <div className=\"header__details__top\">\n          <h3>New 11</h3>\n          <h3>Existing 50</h3>\n        </div>\n        <div className=\"header__details__bottom\">\n          <span>Current subscription is ending on 3 Mar 2019</span>\n          &nbsp;&nbsp;<a href=\"#renew\">Renew Now</a>\n        </div>\n      </div>\n    </div>\n    )\n  }\n\n  // ******** CUSTOM METHODS *********** //\n\n  onMenuClick(){\n    const navBar = document.querySelector('.navbar');\n    navBar.classList.toggle('navbar--visible');\n  }\n}\n  \nexport default Header;","import React, { Component } from 'react';\nimport { SelectInput } from '../';\n\nimport './style.scss';\n\nclass SideBar extends Component {\n  constructor(){\n    super();\n    this.state = {\n\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(){\n    console.log('lol');\n  }\n\n  render() {\n    return (\n      <div className=\"sidebar\">\n        <SelectInput label=\"Location: \"/>\n        <SelectInput label=\"Size: \"/>\n      </div>\n    );\n  }\n}\n\nexport default SideBar;\n","import React, { Component } from 'react';\nimport './style.scss';\n\nclass Filters extends Component {\n  render() {\n    return (\n      <div className=\"filters\">\n        <div className=\"filters__left\">\n          <button className=\"btn btn__filter\">Filter</button>\n        </div>\n        <div className=\"filters__right\">\n          <button className=\"btn\">New</button>\n          <button className=\"btn\">Existing</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Filters;\n","import React, { Component } from 'react';\n\nimport './style.scss';\n\nclass SelectInput extends Component {\n  constructor(){\n    super();\n    this.state = {\n\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n  \n  handleChange(){\n    console.log('lol');\n  }\n\n  render() {\n    return (\n      <div className=\"styled-input__select\">\n        <label>{this.props.label || ''}</label>\n        <select value={this.state.value} onChange={this.handleChange}>\n            <option value=\"grapefruit\">Grapefruit</option>\n            <option value=\"lime\">Lime</option>\n            <option value=\"coconut\">Coconut</option>\n            <option value=\"mango\">Mango</option>\n          </select>\n      </div>\n    );\n  }\n}\n\nexport default SelectInput;\n","import React from 'react';\nimport './style.scss';\n\n/**\n * @props data {Object} Photo details\n * @props size {text}   Size of photo to be fetched\n */\nclass Card extends React.PureComponent {\n  constructor(props){\n    super();\n    this.state = {\n      showOverlay: false,\n      card: props.data\n    }\n    this.imgEl = React.createRef();\n  }\n\n  // ******** LIFECYCLE METHODS *********** //\n  componentDidMount(){\n    \n  }\n  render(){\n    return(\n    <div className=\"card\" onMouseEnter={this.toogleOverlay} onMouseLeave={this.toogleOverlay} >\n      <img src={this.state.card.img} alt=\"\" ref={(el) => this.imgEl = el }/>\n    </div>\n    )\n  }\n\n}\n  \nexport default Card;","import React, { Component } from 'react';\nimport './App.scss';\nimport { Header, Content, SideBar, Filters } from './components';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header/>\n        <Filters/>\n        <SideBar/>\n        <Content/>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}